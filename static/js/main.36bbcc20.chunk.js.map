{"version":3,"sources":["components/Header/Header.js","components/Sidebar/Sidebar.js","components/Footer/Footer.js","pages/About/About.js","components/ChevronNav/ChevronNav.js","components/Carousel/Carousel.jsx","components/WorkItem/WorkItem.js","utils.js","pages/Work/Work.js","App.js","serviceWorker.js","index.js"],"names":["className","data-hoverable","href","alt","size","to","activeClassName","exact","prevDisabled","nextDisabled","handleClick","width","onClick","style","images","hide","useState","cur","setCur","length","src","dir","c","WorkItem","title","description","date","status","setStatus","useEffect","require","useWheel","cb","handleWheel","delay","fn","lastCall","now","Date","getTime","throttled","ev","deltaY","window","addEventListener","console","log","removeEventListener","getImg","img","fields","file","url","preloadImages","items","a","promises","map","image","Image","Promise","res","_","onload","remove","all","client","createClient","space","accessToken","isMobile","work","setWork","curr","setCurr","changeCur","useCallback","newC","getEntries","i","getWork","fontSize","Fragment","split","key","App","useMediaQuery","maxWidth","path","Work","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.36bbcc20.chunk.js","sourcesContent":["import React from 'react'\r\nimport { GitHub, Mail, Linkedin } from 'react-feather';\r\n\r\nimport './index.scss';\r\n\r\nexport default () => {\r\n\r\n    return (\r\n        <header className='header'>\r\n            <span className='logo'>Justas <span>Samuolis</span></span>\r\n            <div className='social'>\r\n                <a data-hoverable=\"true\" href=\"https://github.com/justasam\" alt=\"GitHub profile\"><GitHub size={20} /></a>\r\n                <a data-hoverable=\"true\" href=\"https://www.linkedin.com/in/justas-s-157846108/\" alt=\"Linkedin profile\"><Linkedin size={20} /></a>\r\n                <a data-hoverable=\"true\" href=\"mailto:samuolis.just@gmail.com\" alt=\"Email me\"><Mail size={20} /></a>\r\n            </div>\r\n        </header>\r\n    )\r\n}","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nimport './index.scss';\r\n\r\nexport default () => {\r\n    return (\r\n        <div className='sidebar'>\r\n            <NavLink data-hoverable=\"true\" to='/' activeClassName='active' exact>WORK</NavLink>\r\n            <NavLink data-hoverable=\"true\" to='/about' activeClassName='active' exact>ABOUT</NavLink>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nimport './index.scss'\r\n\r\nexport default () => {\r\n    return (\r\n        <footer className='footer'>\r\n            <span>WEB DEVELOPER</span>\r\n            <span>2020</span>\r\n        </footer>\r\n    );\r\n}","import React from 'react'\r\n\r\nimport './index.scss'\r\n\r\nexport default () => {\r\n\r\n    return (\r\n        <div className='about'>\r\n            <div>\r\n                <div className='info'>\r\n                    <h4>Skills</h4>\r\n                    <ul>\r\n                        <li>React.js, JavaScript, Typescript</li>\r\n                        <li>React Native</li>\r\n                        <li>Node.js</li>\r\n                        <li>Redux, Redux Saga</li>\r\n                        <li>MongoDB, MySQL</li>\r\n                        <li>Agile</li>\r\n                        <li>Python, C++, C# (basic-moderate)</li>\r\n                    </ul>\r\n                </div>\r\n                <div className='info'>\r\n                    <h4>Extra</h4>\r\n                    <p><b>Hacker Games 2016</b> first place in a hackathon in Klaipeda, Lithuania.</p>\r\n                    <p><b>Olympiads</b> participating and performing well in programming Olympiads in Lithuania during my time there (2013-2017)</p>\r\n                </div>\r\n                <div className='info'>\r\n                    <h4>GitHub</h4>\r\n                    <p>403 contributions in the last year</p>\r\n                    <p>235 contributions in 2019</p>\r\n                    <a\r\n                        href='https://github.com/justasam'\r\n                        alt='github'\r\n                        data-hoverable='true'\r\n                    >https://github.com/justasam</a>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <div className='info'>\r\n                    <h4>Experience</h4>\r\n                    <p><b>Freelance, Remote</b> - <i>Full-stack developer</i></p>\r\n                    <p><i>SEP 2016 - PRESENT</i></p>\r\n                    <p>Working with various clients on projects such as:\r\n                    mobile apps (React Native), Websites (React.js), Scripts (Python), Full-stack chat bots (Node.js, React.js, MongoDB)</p>\r\n                </div>\r\n                <div className='info'>\r\n                    <h4>About me</h4>\r\n                    <p>\r\n                        I am a Lithuanian web-developer with a deep understanding of modern JavaScript.\r\n                        <br />When programming I focus on writing reusable and maintainable code, hence my favourite framework is React.\r\n                        <br />I have been working as a freelance full-stack developer for quite some time now, and am looking to expand my horizons by working a more permanent role.\r\n                    </p>\r\n                </div>\r\n                <div className='info'>\r\n                    <h4>Get in touch & General info</h4>\r\n                    <p>You can reach me through my email: <i>samuolis.just@gmail.com</i></p>\r\n                    <p>I am currently residing in <i>Dundee, Scotland.</i></p>\r\n                    <p>Due to covid-19 I'd prefer to work remotely (with regular visits) until the situation changes.</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nimport { ChevronLeft, ChevronRight } from 'react-feather';\r\n\r\nimport './index.scss';\r\n\r\nexport default ({ prevDisabled, nextDisabled, handleClick, width = 60 }) => {\r\n  return (\r\n    <div>\r\n      {!prevDisabled &&\r\n        <div onClick={() => {\r\n          handleClick(-1)\r\n        }} data-hoverable='true' style={{ width }}\r\n          className='prev chevron'><ChevronLeft size={32} /></div>}\r\n      {!nextDisabled &&\r\n        <div onClick={() => {\r\n          handleClick(1)\r\n        }} data-hoverable='true' style={{ width }}\r\n          className='next chevron'><ChevronRight size={32} /></div>}\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport ChevronNav from '../ChevronNav';\r\n\r\nimport './index.scss';\r\n\r\nimport { X } from 'react-feather';\r\n\r\nexport default ({ images, hide }) => {\r\n\r\n    const [cur, setCur] = useState(0);\r\n\r\n    const prevDisabled = cur <= 0;\r\n    const nextDisabled = cur >= images.length - 1;\r\n\r\n    return (\r\n        <div className='carousel'>\r\n            <X className='close' onClick={hide} data-hoverable='true' />\r\n            <img src={images[cur]} alt='work' />\r\n            <ChevronNav\r\n                prevDisabled={prevDisabled}\r\n                nextDisabled={nextDisabled}\r\n                handleClick={(dir) => setCur(c => c + dir)}\r\n            />\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './index.scss';\r\nimport Carousel from '../Carousel';\r\n\r\nconst WorkItem = ({\r\n    title,\r\n    images,\r\n    description,\r\n    date\r\n}) => {\r\n\r\n    const [status, setStatus] = useState('idle');\r\n\r\n    return (\r\n        <div>\r\n            {status === 'idle' ?\r\n                <div\r\n                    className='workitm'\r\n                    onClick={() => setStatus('clicked')}\r\n                >\r\n                    <div className='text' data-hoverable='true'>\r\n                        <h1 className='title'>\r\n                            {title}\r\n                            <span className='outline'>{title}</span>\r\n                        </h1>\r\n                        <div className='info'>\r\n                            <p className='desc'>{description}</p>\r\n                            <p className='date'>{date}</p>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <img data-hoverable='true' className='image' src={images[0]} alt='Project' />\r\n                </div>\r\n                :\r\n                <Carousel images={images} hide={() => setStatus('idle')} />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nWorkItem.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    images: PropTypes.array.isRequired,\r\n    description: PropTypes.string.isRequired,\r\n    date: PropTypes.string.isRequired\r\n}\r\n\r\nexport default WorkItem;","const { useEffect } = require(\"react\")\r\n\r\n// function to throttle\r\nconst throttled = (delay, fn) => {\r\n    let lastCall = 0;\r\n    return function (...args) {\r\n        const now = (new Date()).getTime();\r\n        if (now - lastCall < delay) {\r\n            return;\r\n        }\r\n        lastCall = now;\r\n        return fn(...args);\r\n    }\r\n}\r\n\r\nconst useWheel = (cb) => {\r\n    // -1 down, 1 up\r\n    useEffect(() => {\r\n        const handleWheel = throttled(200, (ev) => {\r\n            if (ev.deltaY < 0) {\r\n                // downscroll\r\n                cb(-1)\r\n            } else {\r\n                // upscroll\r\n                cb(1)\r\n            }\r\n        });\r\n\r\n        window.addEventListener('wheel', handleWheel);\r\n\r\n        return () => {\r\n            console.log('destroyed');\r\n            window.removeEventListener('wheel', handleWheel);\r\n        }\r\n    }, [cb]);\r\n}\r\n\r\n// gets image src from contentful image\r\n// images from contentful are stored\r\n// in fields/file/url\r\nconst getImg = (img) => {\r\n    return 'https:' + img.fields.file.url\r\n};\r\n\r\nconst preloadImages = async (items) => {\r\n    let promises = items.map(({ images }) => {\r\n        let image = new Image();\r\n        image.src = getImg(images[0]);\r\n\r\n        return new Promise((res, _) => {\r\n            image.onload = () => {\r\n                image.remove();\r\n                res();\r\n            }\r\n        });\r\n    });\r\n\r\n    return Promise.all(promises);\r\n}\r\n\r\n\r\nexport { throttled, useWheel, getImg, preloadImages };","import React, { useEffect, useState, useCallback } from 'react'\r\nimport WorkItem from '../../components/WorkItem';\r\nimport { useWheel, preloadImages, getImg } from '../../utils';\r\nimport ChevronNav from '../../components/ChevronNav';\r\n\r\nconst contentful = require('contentful');\r\n\r\nconst client = contentful.createClient({\r\n    space: 'kpsg6aooxb97',\r\n    accessToken: 'G2Di1ss5TOjJRqWOQBPwYEFgoMXumtOW1XkDyqhrdaI'\r\n});\r\n\r\nexport default ({ isMobile }) => {\r\n    const [work, setWork] = useState([]);\r\n    const [curr, setCurr] = useState(0);\r\n    const [status, setStatus] = useState('idle');\r\n\r\n    const changeCur = useCallback(dir => setCurr(c => {\r\n        let newC = c + dir;\r\n        if (newC < 0) return c;\r\n        if (newC >= work.length) return c;\r\n        return newC;\r\n    }), [setCurr, work]);\r\n    useWheel(changeCur);\r\n\r\n    const prevDisabled = curr <= 0;\r\n    const nextDisabled = curr >= work.length - 1;\r\n\r\n    useEffect(() => {\r\n        const getWork = async () => {\r\n            setStatus('loading...');\r\n            try {\r\n                const res = await client.getEntries();\r\n                const items = res.items.map(i => i.fields);\r\n                setWork(items);\r\n                await preloadImages(items);\r\n                setStatus('done');\r\n            }\r\n            catch (err) {\r\n                console.log(err);\r\n                setStatus('Error has occured');\r\n            }\r\n        }\r\n        getWork();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            {status !== 'idle' && status !== 'done' && <h2\r\n                style={{\r\n                    fontSize: '6vw',\r\n                }}\r\n                className='centered'\r\n            >{status}</h2>}\r\n            {status === 'done' &&\r\n                <React.Fragment>\r\n                    {isMobile ?\r\n                        <ChevronNav\r\n                            prevDisabled={prevDisabled}\r\n                            nextDisabled={nextDisabled}\r\n                            handleClick={changeCur}\r\n                        /> :\r\n                        <div>\r\n                            {!prevDisabled && <h1 className='outline prev'>{work[curr - 1].title}</h1>}\r\n                            {!nextDisabled && <h1 className='outline next'>{work[curr + 1].title}</h1>}\r\n                        </div>\r\n                    }\r\n                    <WorkItem\r\n                        title={`${curr}: ${work[curr].title}`}\r\n                        description={work[curr].description}\r\n                        date={work[curr].date.split('T')[0]}\r\n                        images={work[curr].images.map(img => getImg(img))}\r\n                        key={curr}\r\n                    />\r\n                </React.Fragment>\r\n            }\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport Header from './components/Header';\r\nimport Sidebar from './components/Sidebar';\r\nimport Footer from './components/Footer';\r\n\r\nimport About from './pages/About';\r\nimport Work from './pages/Work';\r\n\r\nimport { useMediaQuery } from 'react-responsive'\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\n\r\nfunction App() {\r\n  const isMobile = useMediaQuery({ maxWidth: 1000 });\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <div className=\"gradient-top\" />\r\n        <div className=\"gradient-bot\" />\r\n        <Header />\r\n        <Sidebar />\r\n        <Footer />\r\n\r\n        <Switch>\r\n          <Route path=\"/about\" exact>\r\n            <About />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <Work isMobile={isMobile} />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}