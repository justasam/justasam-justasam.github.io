{"version":3,"sources":["components/Header/Header.js","components/Sidebar/Sidebar.js","components/Footer/Footer.js","components/Cursor/Cursor.js","pages/About/About.js","components/CarouselItem/CarouselItem.js","pages/Work/Work.js","App.js","serviceWorker.js","index.js"],"names":["className","data-hoverable","href","alt","size","to","activeClassName","exact","useState","x","y","mousePos","setMousePos","updateOnMove","ev","pageX","pageY","hoverable","target","dataset","useEffect","window","addEventListener","removeEventListener","Fragment","style","left","top","padding","CarouselItem","title","position","images","description","date","status","setStatus","onClick","s","src","client","require","createClient","space","accessToken","getImg","img","fields","file","url","preloadImages","items","a","promises","map","image","Image","Promise","res","_","onload","remove","all","positions","work","setWork","curr","setCurr","indexes","Set","add","Math","max","length","Array","from","scrollHandler","totSize","delay","fn","lastCall","now","Date","getTime","throttled","deltaY","c","getEntries","i","console","log","getWork","fontSize","index","split","key","App","path","Work","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.68f6baf9.chunk.js","sourcesContent":["import React from 'react'\r\nimport { GitHub, Mail, Linkedin } from 'react-feather';\r\n\r\nimport './index.css';\r\n\r\nexport default () => {\r\n\r\n    return (\r\n        <header className='header'>\r\n            <span className='logo'>Justas <span>Samuolis</span></span>\r\n            <div className='social'>\r\n                <a data-hoverable=\"true\" href=\"https://github.com/justasam\" alt=\"GitHub profile\"><GitHub size={20} /></a>\r\n                <a data-hoverable=\"true\" href=\"https://www.linkedin.com/in/justas-s-157846108/\" alt=\"Linkedin profile\"><Linkedin size={20} /></a>\r\n                <a data-hoverable=\"true\" href=\"mailto:samuolis.just@gmail.com\" alt=\"Email me\"><Mail size={20} /></a>\r\n            </div>\r\n        </header>\r\n    )\r\n}","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nimport './index.css';\r\n\r\nexport default () => {\r\n    return (\r\n        <div className='sidebar'>\r\n            <NavLink data-hoverable=\"true\" to='/' activeClassName='active' exact>WORK</NavLink>\r\n            <NavLink data-hoverable=\"true\" to='/about' activeClassName='active' exact>ABOUT</NavLink>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nimport './index.css'\r\n\r\nexport default () => {\r\n    return (\r\n        <footer className='footer'>\r\n            <span>WEB DEVELOPER</span>\r\n            <span>2020</span>\r\n        </footer>\r\n    );\r\n}","import React, { useState, useEffect } from 'react'\r\n\r\nimport './index.css';\r\n\r\nexport default () => {\r\n    const [mousePos, setMousePos] = useState({ x: 0, y: 0 })\r\n\r\n    const updateOnMove = (ev) => {\r\n        setMousePos({\r\n            x: ev.pageX,\r\n            y: ev.pageY,\r\n            hoverable: ev.target.dataset.hoverable === 'true'\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('mousemove', updateOnMove);\r\n\r\n        return () => {\r\n            window.removeEventListener('mousemove', updateOnMove)\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className='cursor-outer' style={{\r\n                left: mousePos.x,\r\n                top: mousePos.y,\r\n                padding: mousePos.hoverable ? '10px' : 0\r\n            }}>\r\n            </div>\r\n            <div className='cursor-inner' style={{\r\n                left: mousePos.x,\r\n                top: mousePos.y\r\n            }}></div>\r\n        </React.Fragment>\r\n    );\r\n}","import React from 'react'\r\n\r\nimport './index.css'\r\n\r\nexport default () => {\r\n\r\n    return (\r\n        <div className='about'>\r\n            <div>\r\n                <div className='info'>\r\n                    <h4>Skills</h4>\r\n                    <ul>\r\n                        <li>React.js, JavaScript, Typescript</li>\r\n                        <li>React Native</li>\r\n                        <li>Node.js</li>\r\n                        <li>Redux, Redux Saga</li>\r\n                        <li>MongoDB, MySQL</li>\r\n                        <li>Agile</li>\r\n                        <li>Python, C++, C# (basic-moderate)</li>\r\n                    </ul>\r\n                </div>\r\n                <div className='info'>\r\n                    <h4>Extra</h4>\r\n                    <p><b>Hacker Games 2016</b> first place in a hackathon in Klaipeda, Lithuania.</p>\r\n                    <p><b>Olympiads</b> participating and performing well in programming Olympiads in Lithuania during my time there (2013-2017)</p>\r\n                </div>\r\n                <div className='info'>\r\n                    <h4>GitHub</h4>\r\n                    <p>403 contributions in the last year</p>\r\n                    <p>235 contributions in 2019</p>\r\n                    <a\r\n                        href='https://github.com/justasam'\r\n                        alt='github'\r\n                        data-hoverable='true'\r\n                    >https://github.com/justasam</a>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <div className='info'>\r\n                    <h4>Experience</h4>\r\n                    <p><b>Freelance, Remote</b> - <i>Full-stack developer</i></p>\r\n                    <p><i>SEP 2016 - PRESENT</i></p>\r\n                    <p>Working with various clients on projects such as:\r\n                    mobile apps (React Native), Websites (React.js), Scripts (Python), Full-stack chat bots (Node.js, React.js, MongoDB)</p>\r\n                </div>\r\n                <div className='info'>\r\n                    <h4>About me</h4>\r\n                    <p>\r\n                        I am a Lithuanian web-developer with a deep understanding of modern JavaScript.\r\n                        <br />When programming I focus on writing reusable and maintainable code, hence my favourite framework is React.\r\n                        <br />I have been working as a freelance full-stack developer for quite some time now, and am looking to expand my horizons by working a more permanent role.\r\n                    </p>\r\n                </div>\r\n                <div className='info'>\r\n                    <h4>Get in touch & General info</h4>\r\n                    <p>You can reach me through my email: <i>samuolis.just@gmail.com</i></p>\r\n                    <p>I am currently residing in <i>Dundee, Scotland.</i></p>\r\n                    <p>Due to covid-19 I'd prefer to work remotely (with regular visits) until the situation changes.</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './index.css';\r\n\r\nconst CarouselItem = ({\r\n    title,\r\n    position,\r\n    images,\r\n    description,\r\n    date\r\n}) => {\r\n\r\n    const [status, setStatus] = useState('idle');\r\n\r\n    if (position !== 'center' && status !== 'idle') setStatus('idle');\r\n\r\n    return (\r\n        <div\r\n            data-hoverable={position === 'center' ? 'true' : 'false'}\r\n            className={`carousel carousel-${position} ${status}`}\r\n            onClick={() => setStatus(s => s === 'idle' ? 'clicked' : 'idle')}\r\n        >\r\n            <div className='text'>\r\n                <div className='title'>\r\n                    <h1>{title}<span className='outline'>{title}</span></h1>\r\n                </div>\r\n                <div className='carousel-info'>\r\n                    <p className='desc'>{description}</p>\r\n                    <span className='date'>{date}</span>\r\n                </div>\r\n            </div>\r\n\r\n            <div className='carousel-image'>\r\n                <img src={images[0]} alt='Project' />\r\n                <p>VIEW PROJECT</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nCarouselItem.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    position: PropTypes.oneOf(['top', 'center', 'bot']).isRequired,\r\n    images: PropTypes.array.isRequired,\r\n    description: PropTypes.string.isRequired,\r\n    date: PropTypes.string.isRequired\r\n}\r\n\r\nexport default CarouselItem;","import React, { useEffect, useState } from 'react'\r\nimport CarouselItem from '../../components/CarouselItem/CarouselItem';\r\n\r\nconst contentful = require('contentful');\r\n\r\nconst client = contentful.createClient({\r\n    space: 'kpsg6aooxb97',\r\n    accessToken: 'G2Di1ss5TOjJRqWOQBPwYEFgoMXumtOW1XkDyqhrdaI'\r\n});\r\n\r\n// gets image src from contentful image\r\nconst getImg = (img) => {\r\n    return 'https:' + img.fields.file.url\r\n};\r\n\r\n// Preloads images used\r\nconst preloadImages = async (items) => {\r\n    // images from contentful are stored\r\n    // in fields/file/url\r\n    let promises = items.map(({ images }) => {\r\n        let image = new Image();\r\n        image.src = getImg(images[0]);\r\n\r\n        return new Promise((res, _) => {\r\n            image.onload = () => {\r\n                image.remove();\r\n                res();\r\n            }\r\n        });\r\n    });\r\n\r\n    return Promise.all(promises);\r\n}\r\n\r\n// function to throttle\r\nconst throttled = (delay, fn) => {\r\n    let lastCall = 0;\r\n    return function (...args) {\r\n        const now = (new Date()).getTime();\r\n        if (now - lastCall < delay) {\r\n            return;\r\n        }\r\n        lastCall = now;\r\n        return fn(...args);\r\n    }\r\n}\r\n\r\nconst positions = [\r\n    'center',\r\n    'top',\r\n    'bot'\r\n];\r\n\r\n\r\nexport default () => {\r\n    const [work, setWork] = useState([]);\r\n    const [curr, setCurr] = useState(0);\r\n    const [status, setStatus] = useState('idle');\r\n\r\n    // set to handle edge cases where < 3 elements\r\n    let indexes = new Set();\r\n    indexes.add(curr);\r\n    indexes.add(Math.max(0, curr === 0 ? work.length - 1 : curr - 1));\r\n    indexes.add(curr + 1 > work.length - 1 ? 0 : curr + 1);\r\n    indexes = Array.from(indexes);\r\n\r\n\r\n    useEffect(() => {\r\n        const scrollHandler = totSize => throttled(500, (ev) => {\r\n            if (totSize === 0) return;\r\n\r\n            if (ev.deltaY < 0) {\r\n                // downscroll\r\n                setCurr(c => Math.max(0, c === 0 ? totSize - 1 : c - 1))\r\n            } else {\r\n                // upscroll\r\n                setCurr(c => c + 1 > totSize - 1 ? 0 : c + 1)\r\n            }\r\n        });\r\n\r\n        const getWork = async () => {\r\n\r\n            setStatus('loading...');\r\n            try {\r\n                const res = await client.getEntries();\r\n                const items = res.items.map(i => i.fields);\r\n                setWork(items);\r\n                console.log(items);\r\n                await preloadImages(items);\r\n                window.addEventListener('wheel', scrollHandler(items.length));\r\n                setStatus('done');\r\n            }\r\n            catch (err) {\r\n                console.log(err);\r\n                setStatus('Error has occured');\r\n            }\r\n        }\r\n\r\n        getWork();\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            {status !== 'idle' && status !== 'done' && <h2\r\n                style={{\r\n                    fontSize: '6vw',\r\n                }}\r\n                className='centered'\r\n            >{status}</h2>}\r\n            {status === 'done' &&\r\n                <React.Fragment>\r\n                    {indexes.map((i, index) =>\r\n                        <CarouselItem\r\n                            title={`${i}: ${work[i].title}`}\r\n                            description={work[i].description}\r\n                            date={work[i].date.split('T')[0]}\r\n                            images={work[i].images.map(img => getImg(img))}\r\n                            position={positions[index]}\r\n                            key={i}\r\n                        />\r\n                    )}\r\n                </React.Fragment>\r\n            }\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport Header from './components/Header';\nimport Sidebar from './components/Sidebar';\nimport Footer from './components/Footer';\nimport Cursor from './components/Cursor';\n\nimport About from './pages/About';\nimport Work from './pages/Work';\n\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <div className=\"gradient-top\" />\n        <div className=\"gradient-bot\" />\n        <Header />\n        <Sidebar />\n        <Footer />\n        <Cursor />\n        <Switch>\n          <Route path=\"/about\" exact>\n            <About />\n          </Route>\n          <Route path=\"/\">\n            <Work />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}